{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Dies ist die Wiki zu dem Projekt - IT Installation (Projekt-1).</p>"},{"location":"Anwendungsfalldiagramm/","title":"Anwendungsfalldiagramm","text":""},{"location":"Begriffserkl%C3%A4rung/","title":"Begriffserkl\u00e4rung","text":"Programmiersprache - Vor-/Nachteile <p>Repository:</p> <pre><code>- verwaltetes Verzeichnis zur Speicherung und Beschreibung digitaler \n  Objekte f\u00fcr ein digitales Archiv\n</code></pre> <p>Remote Repository:</p> <pre><code>- Um an jedem Git-Projekt mitarbeiten zu k\u00f6nnen, m\u00fcssen Sie wissen, wie \n  sie Ihre Remote-Repositorys verwalten k\u00f6nnen. Remote-Repositorys sind Versionen \n  ihres Projekts, die im Internet oder im Netzwerk irgendwo gehostet werden.\n</code></pre> <p>Commit:</p> <pre><code>- Commit ist ein Ausdruck aus der Softwaretechnik, der die best\u00e4tigende \n  Freischaltung einer oder mehrerer \u00c4nderungen beschreibt. Er wird sowohl im Zusammenhang \n  mit der Persistierung von Daten in einer Datenbank als auch beim Einpflegen von \n  Programm-Quelltext in Versionsverwaltungssystemen verwendet\n</code></pre> <p>Git Push:</p> <pre><code>- Befehl, um Inhalte aus einem lokalen Repository in ein Remote-Repository hochzuladen.\n</code></pre> <p>Git Pull:</p> <pre><code>- Befehl, um Inhalte aus einem Remote-Repository herunterzuladen und unverz\u00fcglich \n  as lokale Repository zu aktualisieren, damit die Inhalte \u00fcbereinstimmen\n</code></pre> <p>Git clone:</p> <pre><code>- Befehl zur Kopierung der bestehenden Git-Repository\n</code></pre>"},{"location":"Datenformate/","title":"Untersuchung der Datenformate bzw. Datenquellen","text":"Datenquellen: <pre><code>- Kundendaten\n- Grundriss (vom Kunden und/oder vom Techniker)\n- Netzwerkplan\n- Angebot\n</code></pre> <p>Kundendaten:</p> <pre><code>- Bereitsteller: Kunde/Vertrieb\n- Datenformat: .pdf\n- Metainformation: Name, Anschrift, E-Mail-Adresse, Telefonnummer, \n  Alter, Geschlecht\n</code></pre> <p>Grundriss (vom Kunden):</p> <pre><code>- Bereitsteller: Kunde\n- Datenformat: .jpg, .pdf, .skp, .3dm\n- Metainformation: L\u00e4ngen- und Breitenverh\u00e4ltnisse der R\u00e4ume, \n- Position von Hindernissen wie Fenstern, S\u00e4ulen oder M\u00f6bel, \n- Steckdosen, Datenkabel, Abstellr\u00e4ume f\u00fcr Server\n</code></pre> <p>Grundriss:</p> <pre><code>- Bereitsteller: Techniker\n- Datenformat: .skp\n- Metainformationen: L\u00e4ngen- und Breitenverh\u00e4ltnisse der R\u00e4ume; \n  Position von Hindernissen wie Fenstern; S\u00e4ulen oder M\u00f6bel; \n  Steckdosen; Datenkabel; Abstellr\u00e4ume f\u00fcr Server\n</code></pre> <p>Netzwerkplan: </p> <pre><code>- Bereitsteller: Techniker\n- Datenformat: .pdf\n- Metainformationen: IP-Adressen der Ger\u00e4te, Standortinformationen, \n  \u00dcberblick der IT-Infrastruktur, Usernamen und Passw\u00f6rter der verwendeten Systeme\n</code></pre> Weiterverarbeitung: <pre><code>- Alle Daten (Kundendaten, Grundriss, Netzwerkplan) werden in einer Datenbank abgespeichert,\n  falls diese nicht vorhanden sind\n</code></pre> <p>Kundendaten:</p> <pre><code>- IT-Komponenten: Datenbank-Server (Interneterreichbarkeit), \n- Konfiguration eines Intranets, Router\n</code></pre> <p>Grundriss:</p> <pre><code>- Fall: Kunde schickt Grundriss\n-&gt; Umwandlung des Datenformates, falls es keine skp-Datei ist\n-&gt; Auswertung des Grundrisses \u2013 \u00dcberarbeitung bei \u00c4nderungsbedarf\n</code></pre> <p>Netzwerkplan:</p> <pre><code>- ben\u00f6tigte Komponenten sind im Plan abgebildet und k\u00f6nnen im Angebot aufgenommen werden\n</code></pre> Angebot: <pre><code>- Datenformat: .pdf\n- Grund: Unabh\u00e4ngig vom benutzten Ger\u00e4t oder Betriebssystem bleibt das originale Layout, \n  inklusive Schriftarten und Bildern. Damit ist garantiert,\n  dass der Kunde das Angebot lesen kann.\n</code></pre> <p>Zugriffserlaubnis:</p> <pre><code>- Der Techniker und der Vertrieb, sowie die sp\u00e4teren Entwickler \n  (falls das Angebot angenommen wurde), d\u00fcrfen die Daten nutzen und weiterbearbeiten.\n</code></pre>"},{"location":"Phase2/","title":"Dokumentation der Phase 2","text":"<p>In Phase 2 wurde erledigt:</p> <ul> <li>Begriffserkl\u00e4rungen f\u00fcr Git</li> </ul>"},{"location":"Sequenzdiagramm/","title":"Sequenzdiagramm","text":""},{"location":"Zielplattformen/","title":"Vor-/Nachteile von Zielplattformen zur Softwareentwicklung","text":"Zielplattformen f\u00fcr die Gundrisserstellung    Zeilpalltform Vorteile Nachteile     Mobiles Tablet Jederzeit Zugriff auf alle Daten Kleines Display    Vor-Ort Begehung Netzwerkverbindung     Akkulaufzeit beachten   B\u00fcro besseres Handling beim Erstellen fehlendes Vorstellungsverm\u00f6gen    Austausch mit Kollegen     bessere Konzentration     Phyton: <p>Vorteile:</p> <pre><code>- Open-Source\n- objektorientierte Programmierung\n- Dynamisches Casting (keine Deklaration von Variablen)\n- Einfach strukturierter Code ohne viele Formatierungen\n</code></pre> <p>Nachteile:</p> <pre><code>- relativ langsam\n- keine Deklaration von Variablen\n</code></pre> C#: <p>Vorteile:</p> <pre><code>- Strukturierte Programmiersprache\n- Gro\u00dfe Standard-Bibliothek\n- Automatische Garbage-Collection\n- visuelle Anwendung\n</code></pre> <p>Nachteile:</p> <pre><code>- Echtzeitanwendungen sind in C# nicht oder nur eingeschr\u00e4nkt m\u00f6glich\n- kein Open-Source\n- Frameworkabh\u00e4ngig\n</code></pre>"},{"location":"legal/imprint/","title":"Impressum","text":"Ein MkDocs-Template <p>f\u00fcr die Integration der MkDocs-Applikation in die schulische (IT-)Projektorganisation in den Unterricht am BSZET Dresden. </p>  erstellt von <p>Fachbereich IT-Systeme</p> <p>BSZ Elektrotechnik Dresden 01219 Dresden Strehlener Platz 2</p> <p>\u00a9 2021</p>"},{"location":"user-guide/getting-started/","title":"Getting started","text":"<p>Lorem ipsum dolor sit amet, consectetur adipisici elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>"},{"location":"user-guide/getting-started/#das-material-thema","title":"Das Material Thema","text":"Ein Tipp f\u00fcr Code-Beispiele <p>Schl\u00fcsselwort <code>tip</code> Hier folgt der Inhalt des Kastens. Einger\u00fcckt per Tab. <pre><code>Code im Kasten: whoami\n</code></pre></p>   <p>Eine Gefahr</p> <p>Schl\u00fcsselwort <code>danger</code> Hier muss man aufpassen!</p>  <p>Die Liste der Erweiterungen des Material-Themas</p> <ol> <li>abstract</li> <li>info </li> <li>tip</li> <li>success</li> <li>question</li> <li>warning</li> <li>failure</li> <li>danger</li> <li>bug</li> <li>quote</li> </ol>"},{"location":"user-guide/getting-started/#nutzliche-links","title":"N\u00fctzliche Links","text":"<p>Zum </p> <ul> <li>Online Tutorial</li> <li>Material Thema</li> <li>c't-Artikel1 \"Doku Freuden\"</li> </ul>   <ol> <li> <p>c't 18/2020, Seite 160ff. Heise Medien GmbH &amp; Co. KG, Hannover\u00a0\u21a9</p> </li> </ol>"}]}